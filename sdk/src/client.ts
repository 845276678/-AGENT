// Minimal typed fetch wrapper using openapi-fetch
// 1) Run `npm run gen` to generate ./src/types.ts from docs/api/openapi.yaml
// 2) Use createClient() to call endpoints with typed request/response

import createClientFactory from 'openapi-fetch';
// types will be generated by openapi-typescript
// eslint-disable-next-line @typescript-eslint/no-unused-vars
import type { paths } from './types';

export function createClient(baseUrl: string, token?: string) {
  const client = createClientFactory<paths>({ baseUrl });
  const authHeaders = token ? { Authorization: `Bearer ${token}` } : {};
  return {
     client,
     authHeaders,
  };
}

// Example helpers (optionally expand for common flows)
export async function login(baseUrl: string, email: string, password: string){
  const { data, error } = await createClient(baseUrl).client.POST('/auth/login', {
    body: { email, password }
  });
  if (error) throw error; return data;
}
